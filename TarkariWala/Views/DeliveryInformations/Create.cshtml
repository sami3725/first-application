@model TarkariWala.Models.DeliveryInformation

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>DeliveryInformation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">
            <div class="col-md-4">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.OrderID, "OrderID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="input-group col-md-10">
                            @Html.DropDownList("OrderID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                            <div class="input-group-append">
                                <button type="button" class="btn-success" data-toggle="modal" data-target="#OrdersCreateModal">
                                    <i class="fa fa-plus-circle"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeliverymansID, "DeliverymansID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="input-group col-md-10">
                            @Html.DropDownList("DeliverymansID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeliverymansID, "", new { @class = "text-danger" })
                            <div class="input-group-append">
                                <button type="button" class="btn-success" data-toggle="modal" data-target="#DeliverymenCreateModal">
                                    <i class="fa fa-plus-circle"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Signature, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Signature, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Signature, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group col-md-12">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<div class="modal fade" id="OrdersCreateModal" tabindex="-1" role="dialog" aria-labelledby="OrdersCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @Html.Action("OrdersCreateModal", "DeliveryInformations")

    </div>
</div>

<div class="modal fade" id="DeliverymenCreateModal" tabindex="-1" role="dialog" aria-labelledby="DeliverymenCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @Html.Action("DeliverymenCreateModal", "DeliveryInformations")

    </div>
</div>
