@model TarkariWala.Models.Payment

@{
    ViewBag.Title = "Create";
}

<div>
    <div class="bg-dark rounded">
        <p class="nav-link text-white" style="font-size:20px;"> Payments &nbsp;<i class="fas fa-chevron-right"></i> Create</p>
    </div>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-row">
        <div class="col-md-4">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderID, "OrderID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class=" input-group col-md-10">
                        @Html.DropDownList("OrderID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                        <div class="input-group-append">
                            <button type="button" class="btn-success" data-toggle="modal" data-target="#OrdersCreateModal">
                                <i class="fa fa-plus-circle"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.ClientID, "ClientID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="input-group col-md-10">
                        @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                        <div class="input-group-append">
                            <button type="button" class="btn-success" data-toggle="modal" data-target="#ClientsCreateModal">
                                <i class="fa fa-plus-circle"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.CoupenCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CoupenCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CoupenCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.PayedAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PayedAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PayedAmount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-12">           
           <div class="col-md-offset-2 col-md-10">
              <input type="submit" value="Create" class="btn btn-primary" />
           </div>              
        </div>
    </div>
  }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
<div class="modal fade" id="OrdersCreateModal" tabindex="-1" role="dialog" aria-labelledby="OrdersCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @Html.Action("OrdersCreateModal", "Payments")

    </div>
</div>

<div class="modal fade" id="ClientsCreateModal" tabindex="-1" role="dialog" aria-labelledby="ClientsCreateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @Html.Action("ClientsCreateModal", "Payments")

    </div>
</div>
